#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_manpages_minus.dpatch by Thibaut Paumard <paumard@users.sourceforge.net>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Change hyphens to minus signs in manpages. Submitted to upstream.

@DPATCH@

diff -urN orig/doc/gist.1 tp/doc/gist.1
--- orig/doc/gist.1	2006-05-19 19:23:14.162486952 +0200
+++ tp/doc/gist.1	2006-05-19 19:30:14.540579768 +0200
@@ -4,7 +4,7 @@
 gist \- browse binary cgm graphics files
 .SH SYNOPSIS
 .B gist
-[[ -in ]
+[[ \-in ]
 .I cgmfile
 ] [
 .I page-number-list
@@ -36,65 +36,65 @@
 has catalogued the input family, you can render any page without delay.
 .SS Options
 .TP 20
-.RI -in \0cgmfile
-The -in is necessary if and only if the cgmfile name begins with a
-digit or - sign.
+.RI \-in \0cgmfile
+The \-in is necessary if and only if the cgmfile name begins with a
+digit or \- sign.
 .TP
-.RI -ps \0psout
+.RI \-ps \0psout
 to specify a PostScript output file.
 .TP
-.RI -cgm \0cgmout
+.RI \-cgm \0cgmout
 to specify a binary CGM output file.
 .TP
-.RI -display \0host:server.screen
+.RI \-display \0host:server.screen
 to specify an X server connection.
 If this option is not given, gist will use the
 DISPLAY environment variable.
 .TP
--75
+\-75
 create window(s) at 75 dpi (small window)
 .TP
--100
+\-100
 create window(s) at 100 dpi (large window, default)
 .TP
-.RI -geometry \0WxH
+.RI \-geometry \0WxH
 create window(s) with specified width and height (in pixels)
 .TP
--gks
+\-gks
 create window(s) at 8x8 inches (default 6x6).
 If your cgm file was NOT created by yorick(1), this may be a better
 guess at an appropriate window size.  You can also resize the
-gist window using your window manager or -geometry.
+gist window using your window manager or \-geometry.
 .TP
--nd
+\-nd
 to suppress the automatic display of the first
 picture when gist starts in interactive mode
 .TP
--b
-to run in batch mode (either -cgm or -ps must
-also be specified, implies -nd)
+\-b
+to run in batch mode (either \-cgm or \-ps must
+also be specified, implies \-nd)
 .TP
--f
+\-f
 to run in filter mode, placing PostScript
-output on stdout (implies -b)
+output on stdout (implies \-b)
 .TP
--x
+\-x
 to run as a pure X window program (no keyboard)
 .TP
--fmbug
+\-fmbug
 to compensate for a bug in FrameMaker,
 reverse the EPS preview top-for-bottom in EPS files.
 But I recommend using ghostscript(1) from project GNU to convert
 gist's PostScript output files into EPS files instead of
 gist's EPS command, which makes much cruder preview images.
 .TP
--bg0fg1
+\-bg0fg1
 commercial packages which produce CGM files
 may use color index 0 to mean background,
 index 1 to mean foreground, despite their own
 palette -- this switch compensates
 .TP
--nowarn
+\-nowarn
 suppress all but first warning message
 .SS Page-number-list
 .PP
@@ -104,10 +104,10 @@
 .I m
 just page m
 .TP
-.I m-n
+.I m\-n
 pages m through n, inclusive
 .TP
-.I m-n-s
+.I m\-n\-s
 pages m through n in steps of s
 Using m<=0 or n>=total number of pages
 is legal, causing the loop to terminate at
@@ -116,12 +116,12 @@
 Thus, pages 3, 5, 7, 9, 31, and 17 through 26 (in that order) would be
 specified as:
 .ti 8
-3-9-2 31 17-26
+3\-9\-2 31 17\-26
 .PP
 A page number list on the command line is most useful in conjunction
-with the -b or -f options.
+with the \-b or \-f options.
 .SS Commands
-Unless the -b or -f options were specified, gist expects further commands
+Unless the \-b or \-f options were specified, gist expects further commands
 from the keyboard, or typed in its X window.  Keyboard commands are:
 .TP 20
 .RI open \0cgmfile
@@ -211,7 +211,7 @@
 q
 quit
 .PP
-If the -x option is specified on the command line, gist can be run in
+If the \-x option is specified on the command line, gist can be run in
 the background like other X window programs.  In this case,
 .I only
 the window commands will be recognized.
@@ -220,16 +220,16 @@
 .PP
 To print every page of a CGM file family myfile00.cgm:
 .ti 8
-gist myfile00.cgm -f | lpr
+gist myfile00.cgm \-f | lpr
 .br
 To print only pages 3, 5, 7, 9, 31, and 17 through 26 (in that order):
 .ti 8
-gist myfile00.cgm 3-9-2 31 17-26 -f | lpr
+gist myfile00.cgm 3\-9\-2 31 17\-26 \-f | lpr
 .PP
 To start gist as a pure X window program, with output to PostScript file
 myfile.ps:
 .ti 8
-gist myfile00.cgm -ps myfile.ps -x &
+gist myfile00.cgm \-ps myfile.ps \-x &
 .br
 Type the f, b or g commands in the gist graphics window to navigate through
 myfile00.cgm.  Use the s command to write the current page into myfile.ps;
@@ -237,7 +237,7 @@
 .PP
 To use gist on foreign.cgm which was not generated by Yorick, try:
 .ti 8
-gist -75 -gks -bg0fg1 foreign.cgm
+gist \-75 \-gks \-bg0fg1 foreign.cgm
 .PP
 .SH AUTHOR
 .PP
@@ -259,7 +259,7 @@
 .PP
 However, the ANSI CGM standard is not a page description language like
 PostScript.  Therefore, non-yorick CGMs may or may not be acceptably
-rendered by Gist.  The -gks and -bg0fg1 options may help, but you can
+rendered by Gist.  The \-gks and \-bg0fg1 options may help, but you can
 expect fonts, polymarkers, and line styles to look different with
 Gist than with other CGM browsers (.e.g- idt from NCAR graphics).
 .PP
diff -urN orig/doc/yorick.1 tp/doc/yorick.1
--- orig/doc/yorick.1	2006-05-19 19:31:04.498984936 +0200
+++ tp/doc/yorick.1	2006-05-19 19:32:23.290006880 +0200
@@ -4,14 +4,14 @@
 yorick \- interpreted language for numerical analysis and postprocessing
 .SH SYNOPSIS
 .B yorick
-[ -i
+[ \-i
 .I file1.i
-[ -i
+[ \-i
 .I file2.i
 [ ... ]]]
 .br
 .B yorick
--batch
+\-batch
 .I file.i
 .br
 .SH DESCRIPTION
@@ -100,13 +100,13 @@
 library
 .SS Options
 .TP 20
-.RI -i \0file.i
+.RI \-i \0file.i
 includes the Yorick source file
 .I file.i
 as Yorick starts.  This is equivalent to the #include directive after
 Yorick has started.
 .TP
-.RI -batch \0file.i
+.RI \-batch \0file.i
 includes the Yorick source file
 .I file.i
 as Yorick starts.  Your customization file custom.i, if any, is
